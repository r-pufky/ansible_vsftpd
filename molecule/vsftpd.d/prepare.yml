---
# yamllint disable rule:line-length
###############################################################################
# Prepare
###############################################################################
# Testing requires valid certificate, DSA certificate, and snakeoil
# certificates. PFX certificate. Generate valid test certificates.
#
# Reference:
# * https://mariadb.com/kb/en/certificate-creation-with-openssl/
# * https://gist.github.com/rquackenbush/53ff432567699b21c86f3360fb4ec7f0
# * https://area-51.blog/2012/02/14/generating-private-keys-with-openssl/
# * https://superuser.com/questions/226192/avoid-password-prompt-for-keys-and-prompts-for-dn-information
# yamllint enable rule:line-length

- name: 'Prepare'
  hosts: 127.0.0.1
  connection: local
  gather_facts: false
  tasks:
    - name: 'Prepare | generate cache location'
      ansible.builtin.set_fact:
        _test_cache:
          '{{ lookup("env", "MOLECULE_PROJECT_DIRECTORY") }}/molecule/cache'

    - name: 'Prepare | create cache'
      ansible.builtin.include_role:
        name: 'r_pufky.lib.tests'
        tasks_from: 'create_cache.yml'
      vars:
        test_name: 'Prepare | create cache'

    - name: 'Prepare | generate test CA private key'
      ansible.builtin.shell:
        'openssl genrsa 2048 > "{{ _test_cache }}/ca-key.pem"'
      args:
        creates: '{{ _test_cache }}/ca-key.pem'

    - name: 'Prepare | generate test CA certificate'
      ansible.builtin.command:
        argv:
          - 'openssl'
          - 'req'
          - '-new'
          - '-x509'
          - '-days'
          - '365000'
          - '-nodes'
          - '-subj'
          - '/C=US/ST=NY/L=NY/O=test/CN=test.example.com'
          - '-key'
          - '{{ _test_cache }}/ca-key.pem'
          - '-out'
          - '{{ _test_cache }}/ca.pem'
        creates: '{{ _test_cache }}/ca.pem'

    - name: 'Prepare | generate test DSA parameters'
      ansible.builtin.command:
        argv:
          - 'openssl'
          - 'dsaparam'
          - '-out'
          - '{{ _test_cache }}/dsaparam.pem'
          - '2048'
        creates: '{{ _test_cache }}/dsaparam.pem'

    - name: 'Prepare | generate test DSA key'
      ansible.builtin.command:
        argv:
          - 'openssl'
          - 'gendsa'
          - '-out'
          - '{{ _test_cache }}/dsakey.pem'
          - '{{ _test_cache }}/dsaparam.pem'
        creates: '{{ _test_cache }}/dsakey.pem'

    - name: 'Prepare | generate test DSA certificate request'
      ansible.builtin.command:
        argv:
          - 'openssl'
          - 'req'
          - '-new'
          - '-subj'
          - '/C=US/ST=NY/L=NY/O=test/CN=test.example.com'
          - '-key'
          - '{{ _test_cache }}/dsakey.pem'
          - '-out'
          - '{{ _test_cache }}/dsa-req.pem'
        creates: '{{ _test_cache }}/dsa-req.pem'

    - name: 'Prepare | sign test DSA certificate request'
      ansible.builtin.command:
        argv:
          - 'openssl'
          - 'x509'
          - '-req'
          - '-in'
          - '{{ _test_cache }}/dsa-req.pem'
          - '-signkey'
          - '{{ _test_cache }}/ca-key.pem'
          - '-out'
          - '{{ _test_cache }}/dsa.cert'
        creates: '{{ _test_cache }}/dsa.cert'

- name: 'Prepare'
  hosts: 'all'
  gather_facts: false
  tasks:
    - name: 'Prepare | generate cache location'
      ansible.builtin.set_fact:
        _test_cache:
          '{{ lookup("env", "MOLECULE_PROJECT_DIRECTORY") }}/molecule/cache'

    - name:
        'Prepare | add ssl-cert package for snakeoil certificates'
      ansible.builtin.apt:
        name: 'ssl-cert'
        state: 'present'

    - name: 'Prepare | sign test DSA certificate request'
      ansible.builtin.command:
        argv:
          - 'make-ssl-cert'
          - 'generate-default-snakeoil'
        creates: '/etc/ssl/private/ssl-cert-snakeoil.key'

    - name: 'Prepare | stage ssl-cert-snakeoil.key'
      ansible.builtin.fetch:
        src: '/etc/ssl/private/ssl-cert-snakeoil.key'
        dest: '{{ _test_cache }}/'
        flat: true

    - name: 'Prepare | stage ssl-cert-snakeoil.pem'
      ansible.builtin.fetch:
        src: '/etc/ssl/certs/ssl-cert-snakeoil.pem'
        dest: '{{ _test_cache }}/'
        flat: true
