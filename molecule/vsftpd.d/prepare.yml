---
# yamllint disable rule:line-length
# Testing requires valid certificate, DSA certificate, and snakeoil
# certificates. PFX certificate. Generate valid test certificates.
#
# Reference:
# * https://mariadb.com/kb/en/certificate-creation-with-openssl/
# * https://gist.github.com/rquackenbush/53ff432567699b21c86f3360fb4ec7f0
# * https://area-51.blog/2012/02/14/generating-private-keys-with-openssl/
# * https://superuser.com/questions/226192/avoid-password-prompt-for-keys-and-prompts-for-dn-information

- name: 'VSFTPd.d | prepare'
  hosts: 127.0.0.1
  connection: local
  gather_facts: false
  tasks:
    - name: 'VSFTPd.d | prepare | generate cache location'
      ansible.builtin.set_fact:
        _test_cache: '{{ lookup("env", "MOLECULE_PROJECT_DIRECTORY") }}/molecule/cache'

    - name: 'VSFTPd.d | prepare | create cache'
      ansible.builtin.file:
        path: '{{ _test_cache }}'
        mode: '0755'
        state: 'directory'

    - name: 'VSFTPd.d | prepare | generate test CA private key'
      ansible.builtin.shell: 'openssl genrsa 2048 > "{{ _test_cache }}/ca-key.pem"'
      args:
        creates: '{{ _test_cache }}/ca-key.pem'

    - name: 'VSFTPd.d | prepare | generate test CA certificate'
      ansible.builtin.command: 'openssl req -new -x509 -days 365000 -nodes -subj "/C=US/ST=NY/L=NY/O=test/CN=test.example.com" -key "{{ _test_cache }}/ca-key.pem" -out "{{ _test_cache }}/ca.pem"'
      args:
        creates: '{{ _test_cache }}/ca.pem'

    - name: 'VSFTPd.d | prepare | generate test DSA parameters'
      ansible.builtin.command: 'openssl dsaparam -out "{{ _test_cache }}/dsaparam.pem" 2048'
      args:
        creates: '{{ _test_cache }}/dsaparam.pem'

    - name: 'VSFTPd.d | prepare | generate test DSA key'
      ansible.builtin.command: 'openssl gendsa -out "{{ _test_cache }}/dsakey.pem" "{{ _test_cache }}/dsaparam.pem"'
      args:
        creates: '{{ _test_cache }}/dsakey.pem'

    - name: 'VSFTPd.d | prepare | generate test DSA certificate request'
      ansible.builtin.command: 'openssl req -new -subj "/C=US/ST=NY/L=NY/O=test/CN=test.example.com" -key "{{ _test_cache }}/dsakey.pem" -out "{{ _test_cache }}/dsa-req.pem"'
      args:
        creates: '{{ _test_cache }}/dsa-req.pem'

    - name: 'VSFTPd.d | prepare | sign test DSA certificate request'
      ansible.builtin.command: 'openssl x509 -req -in "{{ _test_cache }}/dsa-req.pem" -signkey "{{ _test_cache }}/ca-key.pem" -out "{{ _test_cache }}/dsa.cert"'
      args:
        creates: '{{ _test_cache }}/dsa.cert'

- name: 'VSFTPd.d | prepare'
  hosts: 'all'
  gather_facts: false
  tasks:
    - name: 'VSFTPd.d | prepare | generate cache location'
      ansible.builtin.set_fact:
        _test_cache: '{{ lookup("env", "MOLECULE_PROJECT_DIRECTORY") }}/molecule/cache'

    - name: 'VSFTPd.d | prepare | add ssl-cert package for snakeoil certificates'
      ansible.builtin.apt:
        name: 'ssl-cert'
        state: 'present'

    - name: 'VSFTPd.d | prepare | sign test DSA certificate request'
      ansible.builtin.command: 'make-ssl-cert generate-default-snakeoil'
      args:
        creates: '/etc/ssl/private/ssl-cert-snakeoil.key'

    - name: 'VSFTPd.d | prepare | stage ssl-cert-snakeoil.key'
      ansible.builtin.fetch:
        src: '/etc/ssl/private/ssl-cert-snakeoil.key'
        dest: '{{ _test_cache }}/'
        flat: true

    - name: 'VSFTPd.d | prepare | stage ssl-cert-snakeoil.pem'
      ansible.builtin.fetch:
        src: '/etc/ssl/certs/ssl-cert-snakeoil.pem'
        dest: '{{ _test_cache }}/'
        flat: true
