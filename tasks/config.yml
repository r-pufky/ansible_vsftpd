---
# yamllint disable rule:line-length
###############################################################################
# Config Service
###############################################################################
# VSFTPd configuration requires YES/NO strings. Convert boolean values to these
# strings.
#
# If service fails to start with 'status=2/INVALIDARGUMENT' in syslog, manually
# execute the configuration file to determine the exact cause:
#
#   vsftpd /etc/vsftpd.conf
#
# Chroot environments require read-only root directories; otherwise logins
# result in:
#
#   500 OOPS: vsftpd: refusing to run with writable root inside chroot ()
#
# Chroot environments with the service local user must set user home directory
# read-only:
#
#   vsftpd_srv_user_home_mode: '0550'
#
# Reference:
# * https://wiki.archlinux.org/title/Very_Secure_FTP_Daemon
# * https://security.appspot.com/vsftpd/vsftpd_conf.html
# * https://unix.stackexchange.com/questions/181436/vsftpd-wont-start-systemd1-vsftpd-service-main-process-exited-code-exite
# * https://www.server-world.info/en/note?os=Debian_12&p=ftp&f=1
# yamllint enable rule:line-length

- name: 'Config | set vsftpd.conf'
  ansible.builtin.template:
    src: 'vsftpd.conf.j2'
    dest: '/etc/vsftpd.conf'
    owner: 'root'
    group: 'root'
    mode: '0644'

- name: 'Config | set banner_file'
  when: _vsftpd_cfg_banner.raw | length > 0
  ansible.builtin.copy:
    dest: '{{ _vsftpd_cfg_banner.role_dest }}'
    owner: 'root'
    group: 'root'
    mode: '0644'
    content: '{{ _vsftpd_cfg_banner.raw }}'

- name: 'Config | remove banner_file'
  when: _vsftpd_cfg_banner.raw | length == 0
  ansible.builtin.file:
    path: '{{ _vsftpd_cfg_banner.raw }}'
    state: 'absent'

- name: 'Config | set banned_emails'
  when: _vsftpd_cfg_banned_emails.raw | length > 0
  ansible.builtin.template:
    src: 'vsftpd.d.j2'
    dest: '{{ _vsftpd_cfg_banned_emails.role_dest }}'
    owner: 'root'
    group: 'root'
    mode: '0600'
  vars:
    items: '{{ _vsftpd_cfg_banned_emails.raw }}'

- name: 'Config | remove banned_emails'
  when: _vsftpd_cfg_banned_emails.raw | length == 0
  ansible.builtin.file:
    path: '{{ _vsftpd_cfg_banned_emails.role_dest }}'
    state: 'absent'

- name: 'Config | set chroot_list'
  when: _vsftpd_cfg_chroot_list.raw | length > 0
  ansible.builtin.template:
    src: 'vsftpd.d.j2'
    dest: '{{ _vsftpd_cfg_chroot_list.role_dest }}'
    owner: 'root'
    group: 'root'
    mode: '0600'
  vars:
    items: '{{ _vsftpd_cfg_chroot_list.raw }}'

- name: 'Config | remove chroot_list'
  when: _vsftpd_cfg_chroot_list.raw | length == 0
  ansible.builtin.file:
    path: '{{ _vsftpd_cfg_chroot_list.role_dest }}'
    state: 'absent'

- name: 'Config | set user_list'
  when: _vsftpd_cfg_userlist.raw | length > 0
  ansible.builtin.template:
    src: 'vsftpd.d.j2'
    dest: '{{ _vsftpd_cfg_userlist.role_dest }}'
    owner: 'root'
    group: 'root'
    mode: '0600'
  vars:
    items: '{{ _vsftpd_cfg_userlist.raw }}'

- name: 'Config | remove user_list'
  when: _vsftpd_cfg_userlist.raw | length == 0
  ansible.builtin.file:
    path: '{{ _vsftpd_cfg_userlist.role_dest }}'
    state: 'absent'

# TODO(role): disabled until future ansible data tagging update.
# no_log: true  # Passwords.
- name: 'Config | set email_passwords'
  when: _vsftpd_cfg_email_passwords.raw | length > 0
  ansible.builtin.template:
    src: 'vsftpd.d.j2'
    dest: '{{ _vsftpd_cfg_email_passwords.role_dest }}'
    owner: 'root'
    group: 'root'
    mode: '0600'
  vars:
    items: '{{ _vsftpd_cfg_email_passwords.raw }}'

- name: 'Config | remove email_passwords'
  when: _vsftpd_cfg_email_passwords.raw | length == 0
  ansible.builtin.file:
    path: '{{ _vsftpd_cfg_email_passwords.raw }}'
    state: 'absent'

- name: 'Config | set local user login root directory'
  when: _vsftpd_cfg_local_root.raw | length > 0
  ansible.builtin.file:
    path: '{{ _vsftpd_cfg_local_root.raw }}'
    owner: '{{ _vsftpd_srv_local_root_user.role_uid }}'
    group: '{{ _vsftpd_srv_local_root_group.role_gid }}'
    mode: '{{ _vsftpd_srv_local_root_mode.raw }}'
    recurse: '{{ _vsftpd_srv_local_root_recursive_enable.raw }}'
    state: 'directory'
  become: true
  become_user: '{{
      _vsftpd_srv_user.raw
      if _vsftpd_srv_user_data_manage_enable.raw else
      "root"
    }}'

- name: 'Config | set anonymous user login root directory'
  when: _vsftpd_cfg_anon_root.raw | length > 0
  ansible.builtin.file:
    path: '{{ _vsftpd_cfg_anon_root.raw }}'
    owner: '{{ _vsftpd_srv_anon_root_user.role_uid }}'
    group: '{{ _vsftpd_srv_anon_root_group.role_gid }}'
    mode: '{{ _vsftpd_srv_anon_root_mode.raw }}'
    recurse: '{{ _vsftpd_srv_anon_root_recursive_enable.raw }}'
    state: 'directory'
  become: true
  become_user: '{{
      _vsftpd_srv_user.raw
      if _vsftpd_srv_user_data_manage_enable.raw else
      "root"
    }}'

- name: 'Config | set ca.cert'
  when: _vsftpd_cfg_ca_certs_file.raw | length > 0
  ansible.builtin.copy:
    src: '{{ _vsftpd_cfg_ca_certs_file.role_src }}'
    dest: '{{ _vsftpd_cfg_ca_certs_file.role_dest }}'
    owner: 'root'
    group: 'root'
    mode: '0400'
    force: true

- name: 'Config | remove ca.cert'
  when: _vsftpd_cfg_ca_certs_file.raw | length == 0
  ansible.builtin.file:
    path: '{{ _vsftpd_cfg_ca_certs_file.role_dest }}'
    state: 'absent'

- name: 'Config | set dsa.cert'
  when: _vsftpd_cfg_dsa_cert_file.raw | length > 0
  ansible.builtin.copy:
    src: '{{ _vsftpd_cfg_dsa_cert_file.role_src }}'
    dest: '{{ _vsftpd_cfg_dsa_cert_file.role_dest }}'
    owner: 'root'
    group: 'root'
    mode: '0400'
    force: true

- name: 'Config | remove dsa.cert'
  when: _vsftpd_cfg_dsa_cert_file.raw | length == 0
  ansible.builtin.file:
    path: '{{ _vsftpd_cfg_dsa_cert_file.role_dest }}'
    state: 'absent'

- name: 'Config | set dsa.key'
  when: _vsftpd_cfg_dsa_private_key_file.raw | length > 0
  ansible.builtin.copy:
    src: '{{ _vsftpd_cfg_dsa_private_key_file.role_src }}'
    dest: '{{ _vsftpd_cfg_dsa_private_key_file.role_dest }}'
    owner: 'root'
    group: 'root'
    mode: '0400'
    force: true

- name: 'Config | remove dsa.key'
  when: _vsftpd_cfg_dsa_private_key_file.raw | length == 0
  ansible.builtin.file:
    path: '{{ _vsftpd_cfg_dsa_private_key_file.role_dest }}'
    state: 'absent'

- name: 'Config | set rsa.pem'
  when: _vsftpd_cfg_rsa_cert_file.raw | length > 0
  ansible.builtin.copy:
    src: '{{ _vsftpd_cfg_rsa_cert_file.role_src }}'
    dest: '{{ _vsftpd_cfg_rsa_cert_file.role_dest }}'
    owner: 'root'
    group: 'root'
    mode: '0644'
    force: true

- name: 'Config | remove rsa.pem'
  when: _vsftpd_cfg_rsa_cert_file.raw | length == 0
  ansible.builtin.file:
    path: '{{ _vsftpd_cfg_rsa_cert_file.role_dest }}'
    state: 'absent'

- name: 'Config | set rsa.key'
  when: _vsftpd_cfg_rsa_private_key_file.raw | length > 0
  ansible.builtin.copy:
    src: '{{ _vsftpd_cfg_rsa_private_key_file.role_src }}'
    dest: '{{ _vsftpd_cfg_rsa_private_key_file.role_dest }}'
    owner: 'root'
    group: 'root'
    mode: '0400'
    force: true

- name: 'Config | remove rsa.key'
  when: _vsftpd_cfg_rsa_private_key_file.raw | length == 0
  ansible.builtin.file:
    path: '{{ _vsftpd_cfg_rsa_private_key_file.role_dest }}'
    state: 'absent'

- name: 'Config | set user_config'
  when: _vsftpd_cfg_user_config_dir.raw | length > 0
  ansible.builtin.copy:
    src: '{{ _vsftpd_cfg_user_config_dir.role_src }}'
    dest: '{{ _vsftpd_cfg_user_config_dir.role_dest }}'
    owner: 'root'
    group: 'root'
    mode: '0644'
    directory_mode: '0755'
    force: true

- name: 'Config | remove user_config'
  when: _vsftpd_cfg_user_config_dir.raw | length == 0
  ansible.builtin.file:
    path: '{{ _vsftpd_cfg_user_config_dir.role_dest }}'
    state: 'absent'

- name: 'Install | set service hardening drop-in'
  when: _vsftpd_srv_harden_enable.raw
  ansible.builtin.include_role:
    name: 'r_pufky.deb.systemd'
  vars:
    systemd_daemon_reload_enable: true
    systemd_services:
      - name: 'vsftpd'
        state: 'present'
        drop_in: true
        service:
          exec_start_pre:
            - ''
            - '-/bin/mkdir -p {{ _vsftpd_cfg_secure_chroot_dir.raw }}'
        exec:
          private_tmp: true
          protect_system: 'strict'
          protect_home: true
          protect_kernel_tunables: true
          read_write_paths: '{{ _vsftpd_srv_harden_rw_paths.raw }}'
          read_only_paths: '{{ _vsftpd_srv_harden_ro_paths.raw }}'
          inaccessible_paths:
            '{{ _vsftpd_srv_harden_inaccessible_paths.raw }}'

- name: 'Install | set service drop-in'
  when: not _vsftpd_srv_harden_enable.raw
  ansible.builtin.include_role:
    name: 'r_pufky.deb.systemd'
  vars:
    systemd_daemon_reload_enable: true
    systemd_services:
      - name: 'vsftpd'
        state: 'present'
        drop_in: true
        service:
          exec_start_pre:
            - ''
            - '-/bin/mkdir -p {{ _vsftpd_cfg_secure_chroot_dir.raw }}'
