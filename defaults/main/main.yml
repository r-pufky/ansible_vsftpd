---
###############################################################################
# vsftpd Role Configuration
###############################################################################
# FTP system user for vsftpd. Assumes externally managed.
vsftpd_user:  'ftp'
vsftpd_group: 'ftp'

# Create 'ftp' user if not detected? See: vars/main.yml.
vsftpd_create_user: false

# Directory permissions to set for vsftpd_local_root if it is defined.
# {user: '', group: '', mode: ''}. Default: {} (do no set permissions).
vsftpd_local_root_perms: {}

# Virtual users will be created automatically and have permissions from the
# vsfptd_guest_username account. vsftpd_guest_enable, vsftpd_pam_service_name
# will be overridden if this option is enabled.
# List of dicts [{user: '', pass: ''},]. Default: [] (disabled).
vsftpd_virtual_users: []

# If vsftpd_deny_email_enable is true contents of this string will be written
# to vsftpd_banned_email_file. Default: ''.
vsftpd_banned_email_contents: ''

# If vsftpd_chroot_list_enable is true contents of this string will be written
# to vsftpd_chroot_list_file. Default: ''.
vsftpd_chroot_list_contents: ''

# If vsftpd_secure_email_list_enable is true contents of this string will be
# written to vsftp_email_password_file. Default: ''.
vsftpd_secure_email_list_contents: ''

# If vsftpd_userlist_enable or vsftpd_userlist_deny is true contents of this
# string will be written to vsftpd_userlist_file. Default: ''.
vsftpd_userlist_contents: ''

###############################################################################
# vsftpd vsftpd.conf Configuration
###############################################################################
# Default values taken from 'man vsftpd.conf 5', with the exception of debian
# specifics where noted. Options sorted alphabectically to assist in finding
# the right one. See provided example in README.md.

# The timeout, in seconds, for a remote client to establish connection with a
# PASV style data connection. Default: 60.
vsftpd_accept_timeout: 60

# Anonymous users allowed to use secured SSL connections. Default: false.
vsftpd_allow_anon_ssl: false

# Allow writeable chroot environments. Default: false.
vsftpd_allow_writeable_chroot: false

# The maximum data transfer rate permitted, in bytes per second, for anonymous
# clients. Default: 0 (unlimited).
vsftpd_anon_max_rate: 0

# Anonymous users will be permitted to create new directories under certain
# conditions. For this to work, the option vsftpd_write_enable must be
# activated, and the anonymous ftp user must have write permission on the
# parent directory. Default: false.
vsftpd_anon_mkdir_write_enable: false

# Anonymous users will be permitted to perform write operations other than
# upload and create directory, such as deletion and renaming. This is generally
# not recommended but included for completeness. Default: false.
vsftpd_anon_other_write_enable: false

# This option represents a directory which vsftpd will try to change into after
# an anonymous login. Failure is silently ignored. Default: ''.
vsftpd_anon_root: ''

# The value that the umask for file creation is set to for anonymous users.
# May be octal (Used quoted string). Default: '077'.
vsftpd_anon_umask: '077'

# Anonymous users will be permitted to upload files under certain conditions.
# For this to work, the option vsftpd_write_enable must be activated, and the
# anonymous ftp user must have write permission on desired upload locations.
# This setting is also required for virtual users to upload; by default,
# virtual users are treated with anonymous (i.e. maximally restricted)
# privilege. Default: false.
vsftpd_anon_upload_enable: false

# Anonymous users will only be allowed to download files which are world
# readable. This is recognising that the ftp user may own files, especially in
# the presence of uploads. Default: true.
vsftpd_anon_world_readable_only: true

# Controls whether anonymous logins are permitted or not. If enabled, both the
# usernames ftp and anonymous are recognised as anonymous logins.
# Default: true (Debian: false).
vsftpd_anonymous_enable: false

# ASCII mode data transfers will be honoured on downloads. Default: false.
vsftpd_ascii_download_enable: false

# ASCII mode data transfers will be honoured on uploads. Default: false.
vsftpd_ascii_upload_enable: false

# A special FTP command known as "async ABOR" will be enabled. Only ill advised
# FTP clients will use this feature. Additionally, this feature is awkward to
# handle, so it is disabled by default. Unfortunately, some FTP clients will
# hang when cancelling a transfer unless this feature is available, so you may
# wish to enable it. Default: false.
vsftpd_async_abor_enable: false

# vsftpd will background the listener process when started in "listen" mode.
# i.e. control will immediately be returned to the shell which launched vsftpd.
# For standalone this is typically false. For inetd this is typically true.
# Default: false (standalone) (Debian: true (inetd)).
vsftpd_background: false

# This option is the name of a file containing a list of anonymous e-mail
# passwords which are not permitted. This file is consulted if the option
# vsftpd_deny_email_enable is enabled. Default: '/etc/vsftpd/banned_emails'.
vsftpd_banned_email_file: '/etc/vsftpd/banned_emails'

# This option is the name of a file containing text to display when someone
# connects to the server. If set, it overrides the banner string provided by
# the vsftpd_ftpd_banner option. Default: ''.
vsftpd_banner_file: ''

# This option is the name of a file to load Certificate Authority certs from,
# for the purpose of validating client certs. The loaded certs are also
# advertised to the client, to cater for TLSv1.0 clients such as the z/OS FTP
# client. Regrettably, the default SSL CA cert paths are not used, because of
# vsftpd's use of restricted filesystem spaces (chroot). Default: ''.
vsftpd_ca_certs_file: ''

# Note! This option only has an effect for non-PAM builds of vsftpd. If
# disabled, vsftpd will not check /etc/shells for a valid user shell for local
# logins. Default: true.
vsftpd_check_shell: true

# Allows use of the SITE CHMOD command. NOTE! This only applies to local users.
# Anonymous users never get to use SITE CHMOD. Default: true.
vsftpd_chmod_enable: true

# The file mode to force for chown()ed anonymous uploads. May be octal (Used
# quoted string). Default: 0600.
vsftpd_chown_upload_mode: '0600'

# All anonymously uploaded files will have the ownership changed to the user
# specified in the setting vsftpd_chown_username. This is useful from an
# administrative, and perhaps security, standpoint. Default: false.
vsftpd_chown_uploads: false

# This is the name of the user who is given ownership of anonymously uploaded
# files. This option is only relevant if another option, vsftpd_chown_uploads,
# is set. Default: 'root'.
vsftpd_chown_username: 'root'

# If activated, you may provide a list of local users who are placed in a
# chroot() jail in their home directory upon login. The meaning is slightly
# different if vsftpd_chroot_local_user is set to YES. In this case, the list
# becomes a list of users which are NOT to be placed in a chroot() jail. By
# default, the file containing this list is /etc/vsftpd/chroot_list, but you
# may override this with the vsftpd_chroot_list_file setting. Default: false.
vsftpd_chroot_list_enable: false

# The option is the name of a file containing a list of local users which will
# be placed in a chroot() jail in their home directory. This option is only
# relevant if the option vsftpd_chroot_list_enable is enabled. If the option
# vsftpd_chroot_local_user is enabled, then the list file becomes a list of
# users to NOT place in a chroot() jail.
# Default: '/etc/vsftpd/chroot_list'.
vsftpd_chroot_list_file: '/etc/vsftpd/chroot_list'

# If set to YES, local users will be (by default) placed in a chroot() jail in
# their home directory after login. Warning: This option has security
# implications, especially if the users have upload permission, or shell
# access. Only enable if you know what you are doing. Note that these security
# implications are not vsftpd specific. They apply to all FTP daemons which
# offer to put local users in chroot() jails. Default: false.
vsftpd_chroot_local_user: false

# This options specifies a comma separated list of allowed FTP commands (post
# login. USER, PASS and QUIT and others are always allowed pre-login). Other
# commands are rejected. This is a powerful method of really locking down an
# FTP server. Example: vsftpd_cmds_allowed: ['PASV','RETR','QUIT'].
# Default: [].
vsftpd_cmds_allowed: []

# This options specifies a comma separated list of denied FTP commands (post
# login. USER, PASS, QUIT and others are always allowed pre-login). If a
# command appears on both this and vsftpd_cmds_allowed then the denial takes
# precedence. Example: vsftpd_cmds_allowed: ['USER','PASS','QUIT'].
# Default: [].
vsftpd_cmds_denied: []

# This controls whether PORT style data connections use port 20 (ftp-data) on
# the server machine. For security reasons, some clients may insist that this
# is the case. Conversely, disabling this option enables vsftpd to run with
# slightly less privilege. Default: false (Debian: true).
vsftpd_connect_from_port_20: true

# The timeout, in seconds, for a remote client to respond to our PORT style
# data connection. Default: 60.
vsftpd_connect_timeout: 60

# The timeout, in seconds, which is roughly the maximum time we permit data
# transfers to stall for with no progress. If the timeout triggers, the remote
# client is kicked off. Default: 300.
vsftpd_data_connection_timeout: 300

# OpenSSL connection debug info logged in vsftpd log file. Default: false.
vsftpd_debug_ssl: false

# The number of seconds to pause prior to reporting a failed login. Default: 1.
vsftpd_delay_failed_login: 1

# The number of seconds to pause prior to allowing a successful login.
# Default: 0.
vsftpd_delay_successful_login: 0

# Failed upload files are deleted. Default: false.
vsftpd_delete_failed_uploads: false

# If activated, you may provide a list of anonymous password e-mail responses
# which cause login to be denied. By default, the file containing this list is
# /etc/vsftpd/banned_emails, but you may override this with the
# vsftpd_banned_email_file setting. Default: false.
vsftpd_deny_email_enable: false

# This option can be used to set a pattern for filenames (and directory names
# etc.) which should not be accessible in any way. The affected items are not
# hidden, but any attempt to do anything to them (download, change into
# directory, affect something within directory etc.) will be denied. This
# option is very simple, and should not be used for serious access control -
# the filesystem's permissions should be used in preference. However, this
# option may be useful in certain virtual user setups. In particular aware that
# if a filename is accessible by a variety of names (perhaps due to symbolic
# links or hard links), then care must be taken to deny access to all the
# names. Access will be denied to items if their name contains the string given
# by vsftpd_hide_file, or if they match the regular expression specified by
# vsftpd_hide_file. Note that vsftpd's regular expression matching code is a
# simple implementation which is a subset of full regular expression
# functionality. Because of this, you will need to carefully and exhaustively
# test any application of this option. And you are recommended to use
# filesystem permissions for any important security policies due to their
# greater reliability. Supported regex syntax is any number of *, ? and
# unnested {,} operators. Regex matching is only supported on the last
# component of a path, e.g. a/b/? is supported but a/?/c is not. Example:
# vsftpd_deny_file: ['*.mp3','*.mov','.private']. Default: [].
vsftpd_deny_file: []

# If set to NO, all directory list commands will give permission denied.
# Default: true.
vsftpd_dirlist_enable: true

# Users of the FTP server can be shown messages when they first enter a new
# directory. By default, a directory is scanned for the file .message, but that
# may be overridden with the configuration setting message_file.
# Default: false (Debian: true).
vsftpd_dirmessage_enable: false

# If false, all download requests will give permission denied. Default: true.
vsftpd_download_enable: true

# This option specifies the location of the DSA certificate to use for SSL
# encrypted connections; an RSA certificate suffices. Default: ''.
vsftpd_dsa_cert_file: ''

# This option specifies the location of the DSA private key to use for SSL
# encrypted connections. If this option is not set, the private key is expected
# to be in the same file as the certificate. Default: ''.
vsftpd_dsa_private_key_file: ''

# If enabled, two log files are generated in parallel, going by default to
# /var/log/xferlog and /var/log/vsftpd.log. The former is a wu-ftpd style
# transfer log, parseable by standard tools. The latter is vsftpd's own style
# log. Default: false.
vsftpd_dual_log_enable: false

# This option can be used to provide an alternate file for usage by the
# vsftpd_secure_email_list_enable setting.
# Default: '/etc/vsftpd/email_passwords'.
vsftpd_email_password_file: ''

# The permissions with which uploaded files are created. Umasks are applied on
# top of this value. May be octal (Used quoted string). You may wish to change
# to '0777' if you want uploaded files to be executable. Default: '0666'.
vsftpd_file_open_mode: '0666'

# If activated, files and directories starting with . will be shown in
# directory listings even if the "a" flag was not used by the client. This
# override excludes the "." and ".." entries. Default: false.
vsftpd_force_dot_files: false

# Only applies if vsftpd_ssl_enable is activated. If activated, all anonymous
# logins are forced to use a secure SSL connection in order to send and receive
# data on data connections. Default: false.
vsftpd_force_anon_data_ssl: false

# Only applies if vsftpd_ssl_enable is activated. If activated, all anonymous
# logins are forced to use a secure SSL connection in order to send the
# password. Default: false.
vsftpd_force_anon_logins_ssl: false

# Only applies if vsftpd_ssl_enable is activated. If activated, all
# non-anonymous logins are forced to use a secure SSL connection in order to
# send and receive data on data connections. Default: true.
vsftpd_force_local_data_ssl: true

# Only applies if vsftpd_ssl_enable is activated. If activated, all
# non-anonymous logins are forced to use a secure SSL connection in order to
# send the password. Default: true.
vsftpd_force_local_logins_ssl: true

# The port from which PORT style connections originate (as long as the poorly
# named connect_from_port_20 is enabled). Default: 20.
vsftpd_ftp_data_port: 20

# This is the name of the user we use for handling anonymous FTP. The home
# directory of this user is the root of the anonymous FTP area. Default: 'ftp'.
vsftpd_ftp_username: '{{ vsftpd_user }}'

# This string option allows you to override the greeting banner displayed by
# vsftpd when a connection first comes in. Default: '' (default banner).
vsftpd_ftpd_banner: ''

# If enabled, all non-anonymous logins are classed as "guest" logins. A guest
# login is remapped to the user specified in the vsftpd_guest_username setting.
# Default: false.
vsftpd_guest_enable: false

# See the boolean setting guest_enable for a description of what constitutes a
# guest login. This setting is the real username which guest users are mapped
# to. Default: vsftpd_user ('ftp').
vsftpd_guest_username: '{{ vsftpd_user }}'

# If enabled, all user and group information in directory listings will be
# displayed as "ftp". Default: false.
vsftpd_hide_ids: false

# This option can be used to set a pattern for filenames (and directory names
# etc.) which should be hidden from directory listings. Despite being hidden,
# the files / directories etc. are fully accessible to clients who know what
# names to actually use. Items will be hidden if their names contain the string
# given by vsftpd_hide_file, or if they match the regular expression specified
# by vsftpd_hide_file. Note that vsftpd's regular expression matching code is a
# simple implementation which is a subset of full regular expression
# functionality. See vsftpd_deny_file for details of exactly what regex syntax
# is supported. Example: vsftpd_hide_file: ['*.mp3','.hidden','hide*','h?'].
# Default: [].
vsftpd_hide_file: []

# The timeout, in seconds, which is the maximum time a remote client may spend
# between FTP commands. If the timeout triggers, the remote client is kicked
# off. Default: 300.
vsftpd_idle_session_timeout: 300

# If enabled, an SSL handshake is the first thing expect on all connections
# (the FTPS protocol). To support explicit SSL and/or plain text too, a
# separate vsftpd listener process should be run. Default: false.
vsftpd_implicit_ssl: false

# If enabled, use CLONE_NEWNET to isolate the untrusted processes so that they
# can't do arbitrary connect() and instead have to ask the privileged process
# for sockets (vsftpd_port_promiscuous have to be disabled). Default: true.
vsftpd_isolate_network: true

# If enabled, use CLONE_NEWPID and CLONE_NEWIPC to isolate processes to their
# ipc and pid namespaces. So separated processes can not interact with each
# other. Default: true.
vsftpd_isolate: true

# If enabled, vsftpd will run in standalone mode. This means that vsftpd must
# not be run from an inetd of some kind. Instead, the vsftpd executable is run
# once directly. vsftpd itself will then take care of listening for and
# handling incoming connections. Default: true (Debian: false).
vsftpd_listen: true

# If vsftpd is in standalone mode, the default listen address (of all local
# interfaces) may be overridden by this setting. Provide a numeric IP address.
# Default: ''.
vsftpd_listen_address: ''

# Like listen_address, but specifies a default listen address for the IPv6
# listener (which is used if vsftpd_listen_ipv6 is set). Format is standard IPv6
# address format. Default: ''.
vsftpd_listen_address6: ''

# Like the listen parameter, except vsftpd will listen on an IPv6 socket
# instead of an IPv4 one. This parameter and the listen parameter are mutually
# exclusive. Default: false (Debian: true).
vsftpd_listen_ipv6: false

# If vsftpd is in standalone mode, this is the port it will listen on for
# incoming FTP connections. Default: 21.
vsftpd_listen_port: 21

# Controls whether local logins are permitted or not. If enabled, normal user
# accounts in /etc/passwd (or wherever your PAM config references) may be used
# to log in. This must be enable for any non-anonymous login to work, including
# virtual users. Default: false (Debian: true).
vsftpd_local_enable: false

# The maximum data transfer rate permitted, in bytes per second, for local
# authenticated users. Default: 0 (unlimited).
vsftpd_local_max_rate: 0

# This option represents a directory which vsftpd will try to change into after
# a local (i.e. non-anonymous) login. Failure is silently ignored. Default: ''.
vsftpd_local_root: ''

# The value that the umask for file creation is set to for local users. May be
# octal (Used quoted string). Default: 077.
vsftpd_local_umask: '077'

# When enabled, all uploads proceed with a write lock on the upload file. All
# downloads proceed with a shared read lock on the download file. WARNING!
# Before enabling this, be aware that malicious readers could starve a writer
# wanting to e.g. append a file. Default: true.
vsftpd_lock_upload_files: true

# When enabled, all FTP requests and responses are logged, providing the option
# vsftpd_xferlog_std_format is not enabled. Useful for debugging.
# Default: false.
vsftpd_log_ftp_protocol: false

# When enabled, this setting will allow the use of "ls -R". This is a minor
# security risk, because a ls -R at the top level of a large site may consume a
# lot of resources. Default: false.
vsftpd_ls_recurse_enable: false

# If vsftpd is in standalone mode, this is the maximum number of clients which
# may be connected. Any additional clients connecting will get an error
# message. The value 0 switches off the limit. Default: 2000.
vsftpd_max_clients: 2000

# After this many login failures, the session is killed. Default: 3.
vsftpd_max_login_fails: 3

# If vsftpd is in standalone mode, this is the maximum number of clients which
# may be connected from the same source internet address. A client will get an
# error message if they go over this limit. The value 0 switches off the limit.
# Default: 50.
vsftpd_max_per_ip: 50

# This option is the name of the file we look for when a new directory is
# entered. The contents are displayed to the remote user. This option is only
# relevant if the option vsftpd_dirmessage_enable is enabled.
# Default: '.message'.
vsftpd_message_file: '.message'

# When enabled, this setting will allow MDTM to set file modification times
# (subject to the usual access checks). Default: true.
vsftpd_mdtm_write: true

# When enabled, this prevents vsftpd from asking for an anonymous password -
# the anonymous user will log straight in. Default: false.
vsftpd_no_anon_password: false

# When enabled, this prevents vsftpd from taking a file lock when writing to
# log files. This option should generally not be enabled. It exists to
# workaround operating system bugs such as the Solaris / Veritas filesystem
# combination which has been observed to sometimes exhibit hangs trying to lock
# log files. Default: false.
vsftpd_no_log_lock: false

# This is the name of the user that is used by vsftpd when it wants to be
# totally unprivileged. Note that this should be a dedicated user, rather than
# nobody. The user nobody tends to be used for rather a lot of important things
# on most machines. Default: vsftpd_user (Debian: 'nobody').
vsftpd_nopriv_user: '{{ vsftpd_user }}'

# If you have a Linux 2.4 kernel, it is possible to use a different security
# model which only uses one process per connection. It is a less pure security
# model, but gains you performance. You really don't want to enable this unless
# you know what you are doing, and your site supports huge numbers of
# simultaneously connected users. Default: false.
vsftpd_one_process_model: false

# This string is the name of the PAM service vsftpd will use.
# Default: 'ftp' (Debian: 'vsftpd').
vsftpd_pam_service_name: 'vsftpd'

# If enabled, along with chroot_local_user , then a chroot() jail location may
# be specified on a per-user basis. Each user's jail is derived from their home
# directory string in /etc/passwd. The occurrence of /./ in the home directory
# string denotes that the jail is at that particular location in the path.
# Default: false.
vsftpd_passwd_chroot_enable: false

# Set to YES if you want to use a hostname (as opposed to IP address) in the
# vsftpd_pasv_address option. Default: false.
vsftpd_pasv_addr_resolve: false

# Use this option to override the IP address that vsftpd will advertise in
# response to the PASV command. Provide a numeric IP address, unless
# vsftpd_pasv_addr_resolve is enabled, in which case you can provide a hostname
# which will be DNS resolved for you at startup. Default: '' (address is taken
# from the incoming connected socket).
vsftpd_pasv_address: ''

# Set to NO if you want to disallow the PASV method of obtaining a data
# connection. Default: true.
vsftpd_pasv_enable: true

# The maximum port to allocate for PASV style data connections. Can be used to
# specify a narrow port range to assist firewalling. Default: 0 (use any port).
vsftpd_pasv_max_port: 0

# The minimum port to allocate for PASV style data connections. Can be used to
# specify a narrow port range to assist firewalling. Default: 0 (use any port).
vsftpd_pasv_min_port: 0

# Set to YES if you want to disable the PASV security check that ensures the
# data connection originates from the same IP address as the control
# connection. Only enable if you know what you are doing! The only legitimate
# use for this is in some form of secure tunnelling scheme, or perhaps to
# facilitate FXP support. Default: false.
vsftpd_pasv_promiscuous: false

# Set to NO if you want to disallow the PORT method of obtaining a data
# connection. Default: true.
vsftpd_port_enable: true

# Set to YES if you want to disable the PORT security check that ensures that
# outgoing data connections can only connect to the client. Only enable if you
# know what you are doing! Default: false.
vsftpd_port_promiscuous: false

# If set to yes, all SSL client connections are required to present a client
# certificate. The degree of validation applied to this certificate is
# controlled by vsftpd_validate_cert. Default: false.
vsftpd_require_cert: false

# If set to yes, all SSL data connections are required to exhibit SSL session
# reuse (which proves that they know the same master secret as the control
# channel). Although this is a secure default, it may break many FTP clients,
# so you may want to disable it. For a discussion of the consequences, see
# http://scarybeastsecurity.blogspot.com/2009/02/vsftpd-210-released.html
# Default: true.
vsftpd_require_ssl_reuse: true

# This option specifies the location of the RSA certificate to use for SSL
# encrypted connections. Default: '/usr/share/ssl/certs/vsftpd.pem'
# (Debian: '/etc/ssl/certs/ssl-cert-snakeoil.pem').
vsftpd_rsa_cert_file: '/etc/ssl/certs/ssl-cert-snakeoil.pem'

# This option specifies the location of the RSA private key to use for SSL
# encrypted connections. If this option is not set, the private key is expected
# to be in the same file as the certificate. Default: ''
# (Debian: '/etc/ssl/private/ssl-cert-snakeoil.key').
vsftpd_rsa_private_key_file: '/etc/ssl/private/ssl-cert-snakeoil.key'

# Set to YES if you want vsftpd to run as the user which launched vsftpd. This
# is useful where root access is not available. MASSIVE WARNING! Do NOT enable
# this option unless you totally know what you are doing, as naive use of this
# option can create massive security problems. Specifically, vsftpd does not /
# cannot use chroot technology to restrict file access when this option is set
# (even if launched by root). A poor substitute could be to use a
# vsftpd_deny_file setting such as {/*,*..*}, but the reliability of this
# cannot compare to chroot, and should not be relied on. If using this option,
# many restrictions on other options apply. For example, options requiring
# privilege such as non-anonymous logins, upload ownership changing, connecting
# from port 20 and listen ports less than 1024 are not expected to work. Other
# options may be impacted. Default: false.
vsftpd_run_as_launching_user: false

# This option should be the name of a directory which is empty. Also, the
# directory should not be writable by the ftp user. This directory is used as a
# secure chroot() jail at times vsftpd does not require filesystem access.
# Default: '/usr/share/empty' (Debian: '/var/run/vsftpd/empty').
vsftpd_secure_chroot_dir: '/var/run/vsftpd/empty'

# Set to YES if you want only a specified list of e-mail passwords for
# anonymous logins to be accepted. This is useful as a low-hassle way of
# restricting access to low-security content without needing virtual users.
# When enabled, anonymous logins are prevented unless the password provided is
# listed in the file specified by the vsftp_email_password_file setting. The
# file format is one password per line, no extra whitespace. The default
# filename is /etc/vsftpd/email_passwords. Default: false.
vsftpd_secure_email_list_enable: false

# This controls whether vsftpd attempts to maintain sessions for logins. If
# vsftpd is maintaining sessions, it will try and update utmp and wtmp. It will
# also open a vsftpd_pam_session if using PAM to authenticate, and only close
# this upon logout. You may wish to disable this if you do not need session
# logging, and you wish to give vsftpd more opportunity to run with less
# processes and / or less privilege. NOTE - utmp and wtmp support is only
# provided with PAM enabled builds. Default: false.
vsftpd_session_support: false

# If enabled, vsftpd will try and show session status information in the system
# process listing. In other words, the reported name of the process will change
# to reflect what a vsftpd session is doing (idle, downloading etc). You
# probably want to leave this off for security purposes. Default: false.
vsftpd_setproctitle_enable: false

# This option can be used to select which SSL ciphers vsftpd will allow for
# encrypted SSL connections. See the ciphers man page for further details. Note
# that restricting ciphers can be a useful security precaution as it prevents
# malicious remote parties forcing a cipher which they have found problems
# with. Default: 'DES-CBC3-SHA'.
vsftpd_ssl_ciphers: 'DES-CBC3-SHA'

# If enabled, and vsftpd was compiled against OpenSSL, vsftpd will support
# secure connections via SSL. This applies to the control connection (including
# login) and also data connections. You'll need a client with SSL support too.
# NOTE!! Beware enabling this option. Only enable it if you need it. vsftpd can
# make no guarantees about the security of the OpenSSL libraries. By enabling
# this option, you are declaring that you trust the security of your installed
# OpenSSL library. Default: false.
vsftpd_ssl_enable: false

# If enabled, vsftpd will request (but not necessarily require; see
# vsftpd_require_cert) a certificate on incoming SSL connections. Normally this
# should not cause any trouble at all, but IBM zOS seems to have issues.
# Default: true.
vsftpd_ssl_request_cert: true

# Only applies if ssl_enable is activated. If enabled, this option will permit
# SSL v2 protocol connections. TLS v1 connections preferred. Default: false.
vsftpd_ssl_sslv2: false

# Only applies if ssl_enable is activated. If enabled, this option will permit
# SSL v3 protocol connections. TLS v1 connections preferred. Default: false.
vsftpd_ssl_sslv3: false

# Only applies if ssl_enable is activated. If enabled, this option will permit
# TLS v1 protocol connections. TLS v1 connections preferred. Default: true.
vsftpd_ssl_tlsv1: true

# If enabled, SSL data uploads are required to terminate via SSL, not an EOF on
# the socket. This option is required to be sure that an attacker did not
# terminate an upload prematurely with a faked TCP FIN. Unfortunately, it is
# not enabled by default because so few clients get it right. Default: false.
vsftpd_strict_ssl_read_eof: false

# If enabled, SSL data downloads are required to terminate via SSL, not an EOF
# on the socket. This is off by default as I was unable to find a single FTP
# client that does this. It is minor. All it affects is our ability to tell
# whether the client confirmed full receipt of the file. Even without this
# option, the client is able to check the integrity of the download.
# Default: false.
vsftpd_strict_ssl_write_shutdown: false

# If enabled, then any log output which would have gone to /var/log/vsftpd.log
# goes to the system log instead. Logging is done under the FTPD facility.
# Default: false.
vsftpd_syslog_enable: false

# If enabled, and vsftpd was compiled with tcp_wrappers support, incoming
# connections will be fed through tcp_wrappers access control. Furthermore,
# there is a mechanism for per-IP based configuration. If tcp_wrappers sets the
# VSFTPD_LOAD_CONF environment variable, then the vsftpd session will try and
# load the vsftpd configuration file specified in this variable. Default: false.
vsftpd_tcp_wrappers: false

# By default, numeric IDs are shown in the user and group fields of directory
# listings. You can get textual names by enabling this parameter. It is off by
# default for performance reasons. Default: false.
vsftpd_text_userdb_names: false

# If enabled, vsftpd will try and resolve pathnames such as ~chris/pics, i.e. a
# tilde followed by a username. Note that vsftpd will always resolve the
# pathnames ~ and ~/something (in this case the ~ resolves to the initial login
# directory). Note that ~user paths will only resolve if the file /etc/passwd
# may be found within the _current_ chroot() jail. Default: false.
vsftpd_tilde_user_enable: false

# You probably don't want to change this, but try setting it to something like
# 8192 for a much smoother bandwidth limiter. Default: 0 (let vsftpd pick a
# sensible setting).
vsftpd_trans_chunk_size: 0

# If enabled, vsftpd will display directory listings with the time in your
# local time zone. The default is to display GMT. The times returned by the
# MDTM FTP command are also affected by this option.
# Default: false (Debian: true).
vsftpd_use_localtime: false

# An internal setting used for testing the relative benefit of using the
# sendfile() system call on your platform. Default: true.
vsftpd_use_sendfile: true

# This powerful option allows the override of any config option specified in
# the manual page, on a per-user basis. Usage is simple, and is best
# illustrated with an example. If you set vsftpd_user_config_dir to be
# /etc/vsftpd/user_conf and then log on as the user "chris", then vsftpd will
# apply the settings in the file /etc/vsftpd/user_conf/chris for the duration
# of the session. The format of this file is as detailed in this manual page!
# PLEASE NOTE that not all settings are effective on a per-user basis. For
# example, many settings only prior to the user's session being started.
# Examples of settings which will not affect any behviour on a per-user basis
# include vsftpd_listen_address, vsftpd_banner_file, vsftpd_max_per_ip,
# vsftpd_max_clients, vsftpd_xferlog_file, etc. Default: ''
vsftpd_user_config_dir: ''

# This option is useful is conjunction with virtual users. It is used to
# automatically generate a home directory for each virtual user, based on a
# template. For example, if the home directory of the real user specified via
# vsftpd_guest_username is /home/virtual/$USER, and user_sub_token is set to
# $USER, then when virtual user fred logs in, he will end up (usually
# chroot()'ed) in the directory /home/virtual/fred. This option also takes
# affect if vsftpd_local_root contains user_sub_token. Default: ''.
vsftpd_user_sub_token: ''

# This option is examined if vsftpd_userlist_enable is activated. If you set
# this setting to NO, then users will be denied login unless they are
# explicitly listed in the file specified by vsftpd_userlist_file. When login
# is denied, the denial is issued before the user is asked for a password.
# Default: true.
vsftpd_userlist_deny: true

# If enabled, vsftpd will load a list of usernames, from the filename given by
# vsftpd_userlist_file. If a user tries to log in using a name in this file,
# they will be denied before they are asked for a password. This may be useful
# in preventing cleartext passwords being transmitted. See also
# vsftpd_userlist_deny. Default: false.
vsftpd_userlist_enable: false

# This option is the name of the file loaded when the vsftpd_userlist_enable
# option is active. Default: '/etc/vsftpd/user_list'.
vsftpd_userlist_file: '/etc/vsftpd/user_list'

# Indicate that vsftpd use a utf8 filesystem. Default: false.
vsftpd_utf8_filesystem: false

# If set to yes, all SSL client certificates received must validate OK.
# Self-signed certs do not constitute OK validation. Default: false.
vsftpd_validate_cert: false

# This option is the name of the file to which we write the vsftpd style log
# file. This log is only written if the option vsftpd_xferlog_enable is set,
# and vsftpd_xferlog_std_format is NOT set. Alternatively, it is written if you
# have set the option vsftpd_dual_log_enable. One further complication - if you
# have set vsftpd_syslog_enable, then this file is not written and output is
# sent to the system log instead. Default: '/var/log/vsftpd.log'.
vsftpd_log_file: '/var/log/vsftpd.log'

# If enabled, virtual users will use the same privileges as local users. By
# default, virtual users will use the same privileges as anonymous users, which
# tends to be more restrictive (especially in terms of write access).
# Default: false.
vsftpd_virtual_use_local_privs: false

# This controls whether any FTP commands which change the filesystem are
# allowed or not. These commands are: STOR, DELE, RNFR, RNTO, MKD, RMD, APPE
# and SITE. Default: false.
vsftpd_write_enable: false

# If enabled, a log file will be maintained detailing uploads and downloads.
# By default, this file will be placed at /var/log/vsftpd.log, but this
# location may be overridden using the configuration setting vsftpd_log_file.
# Default: false (Debian: true).
vsftpd_xferlog_enable: true

# This option is the name of the file to which we write the wu-ftpd style
# transfer log. The transfer log is only written if the option
# vsftpd_xferlog_enable is set, along with vsftpd_xferlog_std_format.
# Alternatively, it is written if you have set the option
# vsftpd_dual_log_enable. Default: '/var/log/xferlog'.
vsftpd_xferlog_file: '/var/log/xferlog'

# If enabled, the transfer log file will be written in standard xferlog format,
# as used by wu-ftpd. This is useful because you can reuse existing transfer
# statistics generators. The default format is more readable, however. The
# default location for this style of log file is /var/log/xferlog, but you may
# change it with the setting vsftpd_xferlog_file. Default: false.
vsftpd_xferlog_std_format: false
