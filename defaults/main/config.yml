---
###############################################################################
# VSFTPd Configuration (vsftpd.conf)
###############################################################################
# Options sorted alphabetically instead of by type. Default debian options used
# which may differ from man pages.
#
# See provided example in README.md.
#
# Reference:
# * https://manpages.debian.org/bookworm/vsftpd/vsftpd.conf.5.en.html

# Timeout for client to establish PASV data connection (seconds). Default: 60.
vsftpd_config_accept_timeout: 60

# Enable anonymous users use of secured SSL connections?
#
# Requires vsftpd_config_ssl_enable=true.
#
# Default: False.
vsftpd_config_allow_anon_ssl: false

# Anonymous maximum data transfer rate (B/s). Default: 0 (unlimited).
vsftpd_config_anon_max_rate: 0

# Enable anonymous users to create new directories under certain conditions?
#
# Requires vsftpd_config_write_enable=true.
#
# The anonymous ftp user must have write permission on the parent directory.
#
# Default: False.
vsftpd_config_anon_mkdir_write_enable: false

# Enable anonymous users other writes such as deletion and renaming?
#
# Generally not recommended but included for completeness.
#
# Default: False.
vsftpd_config_anon_other_write_enable: false

# Anonymous login root directory.
#
# This option represents a directory which vsftpd will try to change into after
# an anonymous login. Failure is silently ignored.
#
# Default: ''.
vsftpd_config_anon_root: ''

# Anonymous umask octal for file creation. Default: '077'.
vsftpd_config_anon_umask: '077'

# Enable anonymous users to upload files under certain conditions?
#
# Requires vsftpd_config_write_enable=true.
#
# Anonymous ftp user must have write permission on desired upload locations.
# This setting is also required for virtual users to upload; by default,
# virtual users are treated with anonymous (i.e. maximally restricted)
# privilege.
#
# Default: False.
vsftpd_config_anon_upload_enable: false

# Enable anonymous users to only download world readable files?
#
# This is recognizing that the ftp user may own files, especially in
# the presence of uploads.
#
# Default: True.
vsftpd_config_anon_world_readable_only: true

# Enable anonymous logins?
#
# Both usernames ftp and anonymous are recognized as anonymous logins.
#
# Default: False.
vsftpd_config_anonymous_enable: false

# Enable ASCII mode download data transfers? Default: False.
vsftpd_config_ascii_download_enable: false

# Enable ASCII mode upload data transfers? Default: False.
vsftpd_config_ascii_upload_enable: false

# Enable async ABOR command?
#
# Only ill advised FTP clients will use this feature. Additionally, this
# feature is awkward to handle, so it is disabled by default. Unfortunately,
# some FTP clients will hang when cancelling a transfer unless this feature is
# available, so you may wish to enable it.
#
# Default: False.
vsftpd_config_async_abor_enable: false

# Enable backgrounding of listener process when started in "listen" mode?
#
# vsftpd will background the listener process when started in "listen" mode.
# i.e. control will immediately be returned to the shell which launched vsftpd.
# For standalone this is typically false. For inetd this is typically true.
#
# Default: False.
vsftpd_config_background: false

# Banned e-mails list.
#
# Requires vsftpd_config_deny_email_enable=true.
#
# List of email addresses (anonymous logins using email as passwords) which
# are not permitted. Automatically sets
# banned_email_file=/etc/vsftpd.d/banned_email.
#
# vsftpd_config_banned_emails:
#   - 'user1@example.com'
#   - 'user2@example.com'
#
# Default: [].
vsftpd_config_banned_emails: []

# Login banner.
#
# Text to display when someone connects to the server. If set, it overrides the
# banner string provided by the vsftpd_config_ftpd_banner option. Automatically
# sets banner_file=/etc/vsftpd.d/banner_file.
#
# Default: ''.
vsftpd_config_banner: ''

# Load CA certs from specified file.
#
# Name of a file to load Certificate Authority certs from, for the purpose of
# validating client certs. The loaded certs are also advertised to the client,
# to cater for TLSv1.0 clients such as the z/OS FTP client. Regrettably, the
# default SSL CA cert paths are not used, because of vsftpd's use of restricted
# filesystem spaces (chroot).
#
# Sourced from ansible controller; automatically placed in
# vsftpd_role_service_dir/ca.cert with correct permissions. VSFTPd will be
# automatically configured to use the installed location.
#
# vsftpd_config_ca_certs_file: 'host_vars/ftp.example.com/data/ca.cert'
#
# Default: '' (disabled).
vsftpd_config_ca_certs_file: ''

# Enable valid shell checking?
#
# Note! This option only has an effect for non-PAM builds of vsftpd. If
#  disabled, vsftpd will not check /etc/shells for a valid user shell for local
# logins.
#
# Default: True.
vsftpd_config_check_shell: true

# Enable use of the SITE CHMOD command?
#
# NOTE! This only applies to local users. Anonymous users never get to use SITE
# CHMOD.
#
# Default: True.
vsftpd_config_chmod_enable: true

# Anonymous upload forced (chown) file mode. Default: '0600'.
vsftpd_config_chown_upload_mode: '0600'

# Enable anonymous upload ownership change to vsftpd_config_chown_username?
#
# Useful from an administrative, and perhaps security, standpoint.
#
# Default: False.
vsftpd_config_chown_uploads: false

# User given ownership of anonymously uploaded files.
#
# Requires vsftpd_config_chown_uploads=true.
#
# Default: 'root'.
vsftpd_config_chown_username: 'root'

# Enable chroot'ing users listed in vsftpd_config_chroot_list?
#
# If activated, you may provide a list of local users who are placed in a
# chroot() jail in their home directory upon login.
#
# Special Case:
#   * vsftpd_config_chroot_local_user=true - list becomes a list of users which
#     are NOT to be placed in a chroot() jail.
#
# Default: False.
vsftpd_config_chroot_list_enable: false

# Local user chroot list file.
#
# Requires vsftpd_config_chroot_list_enable=true.
#
# List of local users which will be placed in a chroot() jail in their home
# directory.
#
# Special Case:
#   * vsftpd_config_chroot_local_user=true - list file becomes a list of users
#     to NOT place in a chroot() jail.
#
# Default: [].
vsftpd_config_chroot_list: []

# Enable local user chroot'ing to home directory?
#
# Local users will be placed in a chroot() jail in their home directory after
# login.
#
# Warning: This option has security implications, especially if the users have
# upload permission, or shell access. Only enable if you know what you are
# doing. Note that these security implications are not vsftpd specific. They
# apply to all FTP daemons which offer to put local users in chroot() jails.
#
# Default: False.
vsftpd_config_chroot_local_user: false

# List of allowed FTP commands (post login).
#
# USER, PASS and QUIT and others are always allowed pre-login. Other commands
# are rejected. This is a powerful method of really locking down an
# FTP server. Example: vsftpd_config_cmds_allowed: ['PASV','RETR','QUIT'].
#
# Default: [].
vsftpd_config_cmds_allowed: []

# List of denied FTP commands (post login).
#
# USER, PASS, QUIT and others are always allowed pre-login. If a command
# appears on both this and vsftpd_config_cmds_allowed then the denial takes
# precedence. Example: vsftpd_config_cmds_allowed: ['USER','PASS','QUIT'].
#
# Default: [].
vsftpd_config_cmds_denied: []

# Enable ftp-data port connections?
#
# This controls whether PORT style data connections use port 20 (ftp-data) on
# the server machine. For security reasons, some clients may insist that this
# is the case. Conversely, disabling this option enables vsftpd to run with
# slightly less privilege.
#
# Default: True.
vsftpd_config_connect_from_port_20: true

# Timeout for client response to PORT data connections (seconds). Default: 60.
vsftpd_config_connect_timeout: 60

# Timeout for stalled data transfers with no progress (seconds).
#
# The timeout, in seconds, which is roughly the maximum time we permit data
# transfers to stall for with no progress. If the timeout triggers, the remote
# client is kicked off.
#
# Default: 300.
vsftpd_config_data_connection_timeout: 300

# Enable OpenSSL connection debug info. Default: False.
vsftpd_config_debug_ssl: false

# Number of seconds to pause prior to reporting a failed login. Default: 1.
vsftpd_config_delay_failed_login: 1

# Number of seconds to pause prior to allowing a successful login. Default: 0.
vsftpd_config_delay_successful_login: 0

# Enable deletion of failed upload files. Default: False.
vsftpd_config_delete_failed_uploads: false

# Enable anonymous password login denial e-email responses?
#
# If activated, you may provide a list of anonymous password e-mail responses
# in vsftpd_config_banned_emails which cause login to be denied.
#
# Default: False.
vsftpd_config_deny_email_enable: false

# List of patterns for filenames that should not be accessible in any way.
#
# This option can be used to set a pattern for filenames (and directory names
# etc.) which should not be accessible in any way. The affected items are not
# hidden, but any attempt to do anything to them (download, change into
# directory, affect something within directory etc.) will be denied. This
# option is very simple, and should not be used for serious access control -
# the filesystem's permissions should be used in preference.
#
# This option may be useful in certain virtual user setups. In particular aware
# that if a filename is accessible by a variety of names (perhaps due to
# symbolic links or hard links), then care must be taken to deny access to all
# the names. Access will be denied to items if their name contains the string
# given by vsftpd_config_hide_file, or if they match the regular expression
# specified by vsftpd_config_hide_file.
#
# Note that vsftpd's regular expression matching code is a simple
# implementation which is a subset of full regular expression functionality.
# Because of this, you will need to carefully and exhaustively test any
# application of this option. And you are recommended to use filesystem
# permissions for any important security policies due to their greater
# reliability.
#
# Supported regex syntax is any number of *, ? and unnested {,} operators.
# Regex matching is only supported on the last component of a path, e.g. a/b/?
# is supported but a/?/c is not.
#
# vsftpd_config_deny_file:
#   - '*.mp3'
#   - '*.mov'
#   - '.private'
#
# Default: [].
vsftpd_config_deny_file: []

# Enable directory list commands?
#
# Disabling will give permission denied for directory list.
#
# Default: True.
vsftpd_config_dirlist_enable: true

# Enable show message from vsftpd_config_message_file entering new directory?
#
# Users of the FTP server can be shown messages when they first enter a new
# directory. By default, a directory is scanned for the file specified in
# vsftpd_config_message_file.
#
# Default: True.
vsftpd_config_dirmessage_enable: true

# Enable downloads?
#
# Disabling will give permission denied for all download requests.
#
# Default: True.
vsftpd_config_download_enable: true

# List of patterns for filenames allowed to be downloaded.
#
# This option may be set to restrict downloads to files with names matching the
# specified pattern. If a filename also matches the vsftpd_config_deny_file
# pattern, the denial takes precedence.
#
# This option can be used to set a pattern for filenames (and directory names
# etc.) which should be downloadable. The affected items are not hidden, but
# any attempt to do anything to them (download, change into directory, affect
# something within directory etc.) will be denied. This option is very simple,
# and should not be used for serious access control - the filesystem's
# permissions should be used in preference.
#
# Note that vsftpd's regular expression matching code is a simple
# implementation which is a subset of full regular expression functionality.
# Because of this, you will need to carefully and exhaustively test any
# application of this option. And you are recommended to use filesystem
# permissions for any important security policies due to their greater
# reliability.
#
# Supported regex syntax is any number of *, ? and unnested {,} operators.
# Regex matching is only supported on the last component of a path, e.g. a/b/?
# is supported but a/?/c is not.
#
# See vsftpd_config_deny_file for pattern use.
#
# vsftpd_config_download_file:
#   - '*.mp3'
#   - '*.mov'
#   - '.private'
#
# Default: []
vsftpd_config_download_file: []

# DSA certificate file for SSL connections.
#
# Load DSA certificate from specified file.
#
# Sourced from ansible controller; automatically placed in
# vsftpd_role_service_dir/dsa.cert with correct permissions. VSFTPd will be
# automatically configured to use the installed location.
#
# vsftpd_config_dsa_cert_file: 'host_vars/ftp.example.com/data/dsa.cert'
#
# Security: CVE-2024-6387
#   CVE: https://nvd.nist.gov/vuln/detail/cve-2024-6387
#   Decision: leave for legacy FTP sites - DSA keys are considered insecure and
#       should be actively avoided.
#   Mitigation: Use vsftpd_config_rsa_cert_file.
#   Reference:
#   * https://www.openssh.com/txt/release-9.8
#
# Default: '' (disabled).
vsftpd_config_dsa_cert_file: ''

# DSA private key file for SSL connections.
#
# This option specifies the location of the DSA private key to use for SSL
# encrypted connections.
#
# Sourced from ansible controller; automatically placed in
# vsftpd_role_service_dir/dsa.key with correct permissions. VSFTPd will be
# automatically configured to use the installed location.
#
# vsftpd_config_dsa_private_key_file: 'host_vars/ftp.example.com/data/dsa.key'
#
# Security: CVE-2024-6387
#   CVE: https://nvd.nist.gov/vuln/detail/cve-2024-6387
#   Decision: leave for legacy FTP sites - DSA keys are considered insecure and
#       should be actively avoided.
#   Mitigation: Use vsftpd_config_rsa_private_key_file.
#   Reference:
#   * https://www.openssh.com/txt/release-9.8
#
# Default: '' (disabled).
vsftpd_config_dsa_private_key_file: ''

# Enable dual logging (transfer, ftp)?
#
# Two log files are generated in parallel, going by default to /var/log/xferlog
# and /var/log/vsftpd.log. The former is a wu-ftpd style transfer log, parsable
# by standard tools. The latter is vsftpd's own style log.
#
# Default: False.
vsftpd_config_dual_log_enable: false

# List of email passwords.
#
# Requires vsftpd_config_secure_email_list_enable=true.
#
# Automatically sets email_password_file=/etc/vsftpd.d/email_passwords.
#
# Default: [].
vsftpd_config_email_passwords: []

# Permissions with which uploaded files are created.
#
# Umasks are applied on top of this value. You may wish to change to '0777' if
# you want uploaded files to be executable.
#
# Default: '0666'.
vsftpd_config_file_open_mode: '0666'

# Enable forcing of anonymous users to use secure SSL connection?
#
# Requires vsftpd_config_ssl_enable=true.
#
# All anonymous logins are forced to use a secure SSL connection in order to
# send and receive data on data connections.
#
# Default: False.
vsftpd_config_force_anon_data_ssl: false

# Enable forcing anonymous logins to use secure SSL connection?
#
# Requires vsftpd_config_ssl_enable=true.
#
# All anonymous logins are forced to use a secure SSL connection in order to
# send the password.
#
# Default: False.
vsftpd_config_force_anon_logins_ssl: false

# Enable dot files without 'a' flag?
#
# Files and directories starting with . will be shown in directory listings
# even if the "a" flag was not used by the client. This override excludes the
# "." and ".." entries.
#
# Default: False.
vsftpd_config_force_dot_files: false

# Enable forcing local logins to use secure SSL connection for data transfers?
#
# Requires vsftpd_config_ssl_enable=true.
#
# All non-anonymous logins are forced to use a secure SSL connection in order
# to send and receive data on data connections.
#
# Default: True.
vsftpd_config_force_local_data_ssl: true

# Enable forcing local logins to use secure SSL connection for passwords?
#
# Requires vsftpd_config_ssl_enable=true.
#
# All non-anonymous logins are forced to use a secure SSL connection in order
# to send the password.
#
# Default: True.
vsftpd_config_force_local_logins_ssl: true

# Port from which PORT style connections originate.
#
# Requires: vsftpd_config_connect_from_port_20.
#
# Default: 20.
vsftpd_config_ftp_data_port: 20

# Anonymous FTP user username.
#
# This is the name of the user we use for handling anonymous FTP. The home
# directory of this user is the root of the anonymous FTP area.
#
# Default: 'ftp'.
vsftpd_config_ftp_username: 'ftp'

# Greeting banner on first connection. Default: '' (default banner).
vsftpd_config_ftpd_banner: ''

# Enable classification of non-anonymous logins as 'guest' logins?
#
# A guest login is remapped to the user specified in
# vsftpd_config_guest_username.
#
# Setting vsftpd_service_virtual_users forces vsftpd_config_guest_enable=true.
#
# Default: False.
vsftpd_config_guest_enable: false

# Map guest users to user.
#
# Requires vsftpd_config_guest_enable=true.
#
# See vsftpd_config_guest_enable for a description of what constitutes a guest
# login. This setting is the real username which guest users are mapped to.
#
# Default: 'ftp'.
vsftpd_config_guest_username: 'ftp'

# List of patterns for filenames that should be hidden from directory listings.
#
# Despite being hidden, the files / directories etc. are fully accessible to
# clients who know what names to actually use.
#
# This option is very simple, and should not be used for serious access control
# - the filesystem's permissions should be used in preference.
#
# This option may be useful in certain virtual user setups. Access will be
# denied to items if their name contains the string given by
# vsftpd_config_hide_file, or if they match the regular expression specified by
# vsftpd_config_hide_file.
#
# Note that vsftpd's regular expression matching code is a simple
# implementation which is a subset of full regular expression functionality.
# Because of this, you will need to carefully and exhaustively test any
# application of this option. And you are recommended to use filesystem
# permissions for any important security policies due to their greater
# reliability.
#
# Supported regex syntax is any number of *, ? and unnested {,} operators.
# Regex matching is only supported on the last component of a path, e.g. a/b/?
# is supported but a/?/c is not.
#
# See vsftpd_config_deny_file for pattern use.
#
# vsftpd_config_hide_file:
#   - '*.mp3'
#   - '.hidden'
#   - 'hide*'
#   - 'h?'
#
# Default: [].
vsftpd_config_hide_file: []

# Enable user and group information in directory listings display as 'ftp'?
#
# Default: False.
vsftpd_config_hide_ids: false

# Timeout for maximum time between FTP commands (seconds).
#
# The timeout, in seconds, which is the maximum time a remote client may spend
# between FTP commands. If the timeout triggers, the remote client is kicked
# off.
#
# Default: 300.
vsftpd_config_idle_session_timeout: 300

# Enable required SSL handshake (FTPS)?
#
# An SSL handshake is the first thing expect on all connections (the FTPS
# protocol). To support explicit SSL and/or plain text too, a separate vsftpd
# listener process should be run.
#
# Default: False.
vsftpd_config_implicit_ssl: false

# Enable vsftpd standalone mode?
#
# vsftpd executable is run once directly (vsftpd must not be run from inetd).
# vsftpd itself will then take care of listening for and handling incoming
# connections. Mutually exclusive with vsftpd_config_listen_ipv6.
#
# Default: False.
vsftpd_config_listen: false

# IPv6 listen address for standalone mode.
#
# Used if vsftpd_config_listen_ipv6=true.
#
# Default: '' (all addresses).
vsftpd_config_listen_address6: ''

# IPv4 listen address for standalone mode. Default: '' (all addresses).
vsftpd_config_listen_address: ''

# Enable IPv6 vsftpd standalone mode?
#
# vsftpd executable is run once directly (vsftpd must not be run from inetd).
# vsftpd itself will then take care of listening for and handling incoming
# connections. vsftpd will listen on an IPv6 socket instead of an IPv4 one.
# Note that a socket listening on the IPv6 "any" address (::) will accept both
# IPv6 and IPv4 connections by default. Mutually exclusive with
# vsftpd_config_listen.
#
# Default: True.
vsftpd_config_listen_ipv6: true

# Port for incoming FTP connections (standalone mode). Default: 21.
vsftpd_config_listen_port: 21

# Enable local logins?
#
# Normal user accounts in /etc/passwd (or wherever your PAM config references)
# may be used to log in. This must be enable for any non-anonymous login to
# work, including virtual users.
#
# Default: True.
vsftpd_config_local_enable: true

# Local user maximum data transfer rate (B/s). Default: 0 (unlimited).
vsftpd_config_local_max_rate: 0

# Local user login root directory.
#
# This option represents a directory which vsftpd will try to change into after
# a local (i.e. non-anonymous) login. Failure is silently ignored.
#
# Default: ''.
vsftpd_config_local_root: ''

# Local user umask octal for file creation.
#
# Most FTP servers use '022'.
#
# Default: '077'.
vsftpd_config_local_umask: '077'

# Enable write lock on uploaded files?
#
# All uploads proceed with a write lock on the upload file. All downloads
# proceed with a shared read lock on the download file. WARNING! Before
# enabling this, be aware that malicious readers could starve a writer wanting
# to e.g. append a file.
#
# Default: True.
vsftpd_config_lock_upload_files: true

# Enable logging of all FTP requests and responses?
#
# Requires vsftpd_config_xferlog_std_format=false.
#
# All FTP requests and responses are logged. Useful for debugging.
#
# Default: False.
vsftpd_config_log_ftp_protocol: false

# Enable use of 'ls -R'?
#
# Minor security risk, because a ls -R at the top level of a large site may
# consume a lot of resources.
#
# Default: False.
vsftpd_config_ls_recurse_enable: false

# Maximum number of simultaneous client connections (standalone mode).
#
# Any additional clients connecting will get an error message.
#
# Special Case:
#   0: unlimited connections.
#
# Default: 2000.
vsftpd_config_max_clients: 2000

# Kill FTP session after this many login failures. Default: 3.
vsftpd_config_max_login_fails: 3

# Maximum number of clients connected from same source IP (standalone mode).
#
# A client will get an error message if they go over this limit.
#
# Special Case:
#   0: unlimited.
#
# Default: 50.
vsftpd_config_max_per_ip: 50

# Enable MDTM to set file modification times? Default: True.
vsftpd_config_mdtm_write: true

# Message file to display on entering a directory.
#
# Requires vsftpd_config_dirmessage_enable=true.
#
# This option is the name of the file we look for when a new directory is
# entered. The contents are displayed to the remote user.
#
# Default: '.message'.
vsftpd_config_message_file: '.message'

# Enable prevention of anonymous password use?
#
# Anonymous user will log straight in without a password.
#
# Default: False.
vsftpd_config_no_anon_password: false

# Enable prevention of locking log files when writing to them?
#
# This option should generally not be enabled. It exists to workaround
# operating system bugs such as the Solaris / Veritas filesystem combination
# which has been observed to sometimes exhibit hangs trying to lock log files.
#
# Default: False.
vsftpd_config_no_log_lock: false

# Unprivileged user.
#
# This is the name of the user that is used by vsftpd when it wants to be
# totally unprivileged. Note that this should be a dedicated user, rather than
# nobody. The user nobody tends to be used for rather a lot of important things
# on most machines.
#
# Default: 'nobody'.
vsftpd_config_nopriv_user: 'nobody'

# Enable one process per connection?
#
# If you have a Linux 2.4 kernel, it is possible to use a different security
# model which only uses one process per connection. It is a less pure security
# model, but gains you performance. You really don't want to enable this unless
# you know what you are doing, and your site supports huge numbers of
# simultaneously connected users.
#
# Default: False.
vsftpd_config_one_process_model: false

# PAM service vsftpd will use.
#
# Setting vsftpd_service_virtual_users will override this setting.
#
# Default: 'vsftpd'.
vsftpd_config_pam_service_name: 'vsftpd'

# Enable per-user chroot'ing based on user home in /etc/passwd?
#
# Requires vsftpd_config_chroot_local_user=true.
#
# A chroot() jail location may be specified on a per-user basis. Each user's
# jail is derived from their home directory string in /etc/passwd. The
# occurrence of /./ in the home directory string denotes that the jail is at
# that particular location in the path.
#
# Default: False.
vsftpd_config_passwd_chroot_enable: false

# Enable use of hostname intead of IP in vsftpd_config_pasv_address?
#
# Default: False.
vsftpd_config_pasv_addr_resolve: false

# IP address advertised in response to PASV command.
#
# Use this option to override the IP address that vsftpd will advertise in
# response to the PASV command. Provide a numeric IP address, unless
# vsftpd_config_pasv_addr_resolve=true, in which case you can provide a
# hostname which will be DNS resolved for you at startup.
#
# Default: '' (use incoming connection).
vsftpd_config_pasv_address: ''

# Enable PASV data connections? Default: True.
vsftpd_config_pasv_enable: true

# Maximum port to allocate for PASV style data connections.
#
# Can be used to specify a narrow port range to assist firewalling.
#
# Default: 0 (use any port).
vsftpd_config_pasv_max_port: 0

# Minimum port to allocate for PASV style data connections.
#
# Can be used to specify a narrow port range to assist firewalling.
#
# Default: 0 (use any port).
vsftpd_config_pasv_min_port: 0

# Enable PASV promiscuous mode (no same origin security check)?
#
# Disables PASV same origin security check for data/control connections. Only
# enable if you know what you are doing! The only legitimate use for this is in
# some form of secure tunnelling scheme, or perhaps to facilitate FXP support.
#
# Default: False.
vsftpd_config_pasv_promiscuous: false

# Enable PORT data connections? Default: True.
vsftpd_config_port_enable: true

# Enable PORT promiscuous mode (no same origin security check)?
#
# Disables PORT same origin security check for outgoing data/control
# connections. Only enable if you know what you are doing!
#
# Default: False.
vsftpd_config_port_promiscuous: false

# Enable client SSL certificates?
#
# All SSL client connections are required to present a client certificate. The
# degree of validation applied to this certificate is controlled by
# vsftpd_config_validate_cert.
#
# Default: False.
vsftpd_config_require_cert: false

# Enable requiring all SSL data connections to reuse sessions?
#
# All SSL data connections are required to exhibit SSL session reuse (which
# proves that they know the same master secret as the control channel).
# Although this is a secure default, it may break many FTP clients, so you may
# want to disable it. See reference for a discussion of the consequences.
#
# Default: True.
#
# Reference:
# * http://scarybeastsecurity.blogspot.com/2009/02/vsftpd-210-released.html
vsftpd_config_require_ssl_reuse: true

# RSA certificate file for SSL connections.
#
# Sourced from ansible controller; automatically placed in
# vsftpd_role_service_dir/rsa.pem with correct permissions. VSFTPd will be
# automatically configured to use the installed location.
#
# Values:
#   '': Use debian snakeoil certificate at /etc/ssl/certs/ssl-cert-snakeoil.pem
#       (default).
#
# vsftpd_config_rsa_cert_file: 'host_vars/ftp.example.com/data/rsa.pem'
#
# Default: '' (use snakeoil).
vsftpd_config_rsa_cert_file: ''

# RSA private key file for SSL connections.
#
# Sourced from ansible controller; automatically placed in
# vsftpd_role_service_dir/rsa.key with correct permissions. VSFTPd will be
# automatically configured to use the installed location.
#
# Values:
#   '': Use debian snakeoil certificate at
#       /etc/ssl/private/ssl-cert-snakeoil.key (default).
#
# vsftpd_config_rsa_private_key_file: 'host_vars/ftp.example.com/data/rsa.key'
#
# Default: '' (use snakeoil).
vsftpd_config_rsa_private_key_file: ''

# Enable vsftpd to run as the user which launched vsftpd?
#
# This is useful where root access is not available. MASSIVE WARNING! Do NOT
# enable this option unless you totally know what you are doing, as naive use
# of this option can create massive security problems.
#
# Specifically, vsftpd does not / cannot use chroot technology to restrict file
# access when this option is set (even if launched by root). A poor substitute
# could be to use a vsftpd_config_deny_file setting such as {/*,*..*}, but the
# reliability of this cannot compare to chroot, and should not be relied on. If
# using this option, many restrictions on other options apply. For example,
# options requiring privilege such as non-anonymous logins, upload ownership
# changing, connecting from port 20 and listen ports less than 1024 are not
# expected to work. Other options may be impacted.
#
# Default: False.
vsftpd_config_run_as_launching_user: false

# Secure chroot jail directory.
#
# Used as a secure chroot() jail at times vsftpd does not require filesystem
# access. Directory must be:
# * empty.
# * not writable by the ftp user.
#
# Automatically created by the service on startup.
#
# Default: '/var/run/vsftpd/empty'.
vsftpd_config_secure_chroot_dir: '/var/run/vsftpd/empty'

# Enable only specified list of e-mail passwords for anonymous logins?
#
# Useful as a low-hassle way of restricting access to low-security content
# without needing virtual users. When enabled, anonymous logins are prevented
# unless the password provided is listed in the file specified by the
# vsftp_email_password_file setting. The file format is one password per line,
# no extra whitespace. The default filename is /etc/vsftpd.d/email_passwords.
#
# Default: False.
vsftpd_config_secure_email_list_enable: false

# Enable sessions for logins?
#
# If vsftpd is maintaining sessions, it will try and update utmp and wtmp. It
# will also open a vsftpd_config_pam_session if using PAM to authenticate, and
# only close this upon logout. You may wish to disable this if you do not need
# session logging, and you wish to give vsftpd more opportunity to run with
# less processes and / or less privilege. NOTE - utmp and wtmp support is only
# provided with PAM enabled builds.
#
# Default: False.
vsftpd_config_session_support: false

# Enable session status information in the system process listing?
#
# Reported name of the process will change to reflect what a vsftpd session is
# doing (idle, downloading etc). You probably want to leave this off for
# security purposes.
#
# Default: False.
vsftpd_config_setproctitle_enable: false

# Allowed SSL ciphers for encrypted SSL connections.
#
# This option can be used to select which SSL ciphers vsftpd will allow for
# encrypted SSL connections. See the ciphers man page for further details. Note
# that restricting ciphers can be a useful security precaution as it prevents
# malicious remote parties forcing a cipher which they have found problems
# with.
#
# Default: 'DES-CBC3-SHA'.
vsftpd_config_ssl_ciphers: 'DES-CBC3-SHA'

# Enable secure connections via SSL?
#
# If vsftpd was compiled against OpenSSL, vsftpd will support secure
# connections via SSL. This applies to the control connection (including login)
# and also data connections. You'll need a client with SSL support too. NOTE!!
# Beware enabling this option. Only enable it if you need it. vsftpd can make
# no guarantees about the security of the OpenSSL libraries. By enabling this
# option, you are declaring that you trust the security of your installed
# OpenSSL library.
#
# Default: False.
vsftpd_config_ssl_enable: false

# Enable requesting certificate on incoming SSL connections?
#
# vsftpd will request (but not necessarily require; see
# vsftpd_config_require_cert) a certificate on incoming SSL connections.
# Normally this should not cause any trouble at all, but IBM zOS seems to have
# issues.
#
# Default: True.
vsftpd_config_ssl_request_cert: true

# Enable SSLv2 connections (TLSv1 connections preferred)?
#
# Requires vsftpd_config_ssl_enable=true.
#
# Default: False.
vsftpd_config_ssl_sslv2: false

# Enable SSLv3 connections (TLSv1 connections preferred)?
#
# Requires vsftpd_config_ssl_enable=true.
#
# Default: False.
vsftpd_config_ssl_sslv3: false

# Enable TLSv1 connections (TLSv1 connections preferred)?
#
# Requires vsftpd_config_ssl_enable=true.
#
# Default: True.
vsftpd_config_ssl_tlsv1: true

# Enable required SSL data uploads to terminate via SSL not socket EOF?
#
# This option is required to be sure that an attacker did not terminate an
# upload prematurely with a faked TCP FIN. Unfortunately, it is not enabled by
# default because so few clients get it right.
#
# Default: False.
vsftpd_config_strict_ssl_read_eof: false

# Enable required SSL data downloads to terminate via SSL not socket EOF?
#
# This is off by default as I was unable to find a single FTP client that does
# this. It is minor. All it affects is our ability to tell whether the client
# confirmed full receipt of the file. Even without this option, the client is
# able to check the integrity of the download.
#
# Default: False.
vsftpd_config_strict_ssl_write_shutdown: false

# Enable writing to syslog instead of /var/log/vsftpd.log?
#
# Logging is done under the FTPD facility.
#
# Default: False.
vsftpd_config_syslog_enable: false

# Enable use of tcp_wrappers for incoming connections?
#
# Incoming connections will be fed through tcp_wrappers access control.
# Furthermore, there is a mechanism for per-IP based configuration. If
# tcp_wrappers sets the VSFTPD_LOAD_CONF environment variable, then the vsftpd
# session will try and load the vsftpd configuration file specified in this
# variable.
#
# Default: False.
vsftpd_config_tcp_wrappers: false

# Enable text user/group names instead of IDs for directory listings?
#
# By default, numeric IDs are shown in the user and group fields of directory
# listings. You can get textual names by enabling this parameter. It is off by
# default for performance reasons.
#
# Default: False.
vsftpd_config_text_userdb_names: false

# Enable ~ path resolution?
#
# Try and resolve pathnames such as ~chris/pics, i.e. a tilde followed by a
# username. Note that vsftpd will always resolve the pathnames ~ and
# ~/something (in this case the ~ resolves to the initial login directory).
# Note that ~user paths will only resolve if the file /etc/passwd may be found
# within the _current_ chroot() jail.
#
# Default: False.
vsftpd_config_tilde_user_enable: false

# Transfer chunk size.
#
# You probably don't want to change this, but try setting it to something like
# 8192 for a much smoother bandwidth limiter.
#
# Default: 0 (automatic).
vsftpd_config_trans_chunk_size: 0

# List of patterns for filenames allowed to be uploaded.
#
# This option may be set to restrict uploads to files with names matching the
# specified pattern. If a filename also matches the vsftpd_config_deny_file
# pattern, the denial takes precedence.
#
# This option can be used to set a pattern for filenames (and directory names
# etc.) which should be uploadable. The affected items are not hidden, but
# any attempt to do anything to them (download, change into directory, affect
# something within directory etc.) will be denied. This option is very simple,
# and should not be used for serious access control - the filesystem's
# permissions should be used in preference.
#
# Note that vsftpd's regular expression matching code is a simple
# implementation which is a subset of full regular expression functionality.
# Because of this, you will need to carefully and exhaustively test any
# application of this option. And you are recommended to use filesystem
# permissions for any important security policies due to their greater
# reliability.
#
# Supported regex syntax is any number of *, ? and unnested {,} operators.
# Regex matching is only supported on the last component of a path, e.g. a/b/?
# is supported but a/?/c is not.
#
# See vsftpd_config_deny_file for pattern use.
#
# vsftpd_config_upload_file:
#   - '*.mp3'
#   - '*.mov'
#   - '.private'
#
# Default: []
vsftpd_config_upload_file: []

# Enable local time zones for directory listings?
#
# Display directory listings with the time in your local time zone. The default
# is to display GMT. The times returned by the MDTM FTP command are also
# affected by this option.
#
# Default: True.
vsftpd_config_use_localtime: true

# Enable sendfile system call performance test?
#
# An internal setting used for testing the relative benefit of using the
# sendfile() system call on your platform.
#
# Default: True.
vsftpd_config_use_sendfile: true

# Directory containing per-user VSFTPd config overrides.
#
# These are static VSFTPd per-user config files. See 'man vsftpd.conf 5'.
#
# This powerful option allows the override of any config option specified in
# the manual page, on a per-user basis. Usage is simple, and is best
# illustrated with an example. If you set vsftpd_config_user_config_dir to be
# /etc/vsftpd.d/user_conf and then log on as the user "chris", then vsftpd will
# apply the settings in the file /etc/vsftpd.d/user_conf/chris for the duration
# of the session.
#
# PLEASE NOTE that not all settings are effective on a per-user basis. For
# example, many settings only prior to the user's session being started.
# Examples of settings which will not affect any behavior on a per-user basis
# include vsftpd_config_listen_address, vsftpd_config_banner_file,
# vsftpd_config_max_per_ip, vsftpd_config_max_clients,
# vsftpd_config_xferlog_file, etc.
#
# Sourced from ansible controller; automatically placed in
# vsftpd_role_service_dir/user_config with correct permissions. VSFTPd will be
# automatically configured to use the installed location.
#
# vsftpd_config_user_config_dir: 'host_vars/ftp.example.com/user_config'
#
# Default: '' (disabled).
vsftpd_config_user_config_dir: ''

# Automatically generate virtual user home directory.
#
# This option is useful is conjunction with virtual users. It is used to
# automatically generate a home directory for each virtual user, based on a
# template. For example, if the home directory of the real user specified via
# vsftpd_config_guest_username is /home/virtual/$USER, and user_sub_token is
# set to $USER, then when virtual user fred logs in, he will end up (usually
# chroot()'ed) in the directory /home/virtual/fred. This option also takes
# affect if vsftpd_config_local_root contains user_sub_token.
#
# Default: ''.
vsftpd_config_user_sub_token: ''

# Enable use of denial user list?
#
# Requires vsftpd_config_userlist_enable=true.
#
# Denial is issued before the user is asked for a password. User list is read
# from vsftpd_config_userlist.
#
# Values:
#    True: Users allowed login unless explicitly listed (list denies access).
#   False: Users denied login unless explicitly listed (list grants access).
#
# Default: True.
vsftpd_config_userlist_deny: true

# Enable loading of username list from vsftpd_config_userlist?
#
# Load a list of usernames from vsftpd_config_userlist. If a user tries to
# log in using a name in this file, they will be denied before they are asked
# for a password. This may be useful in preventing cleartext passwords being
# transmitted. See also vsftpd_config_userlist_deny.
#
# Default: False.
vsftpd_config_userlist_enable: false

# Username list.
#
# Requires vsftpd_config_userlist_enable=true. Automatically sets
# userlist_file=/etc/vsftpd.d/user_list.
#
# Default: [].
vsftpd_config_userlist: []

# Enable SSL client certificate validation?
#
# If set to yes, all SSL client certificates received must validate OK.
# Self-signed certs do not constitute OK validation.
#
# Default: False.
vsftpd_config_validate_cert: false

# VSFTPd log file.
#
# Requires:
#   * vsftpd_config_syslog_enable=true - log written to syslog.
#   * vsftpd_config_dual_log_enable=true - log written to this file.
#   * vsftpd_config_xferlog_enable=true and
#     vsftpd_config_xferlog_std_format=false - log written to this file.
#
# Default: '/var/log/vsftpd.log'.
vsftpd_config_vsftpd_log_file: '/var/log/vsftpd.log'

# Enable virtual users same privileges as local users?
#
# Virtual users use same privileges as anonymous users by default, which tends
# to be more restrictive (especially in terms of write access).
#
# Default: False.
vsftpd_config_virtual_use_local_privs: false

# Enable FTP commands that change the filesystem?
#
# This controls whether any FTP commands which change the filesystem are
# allowed or not. These commands are: STOR, DELE, RNFR, RNTO, MKD, RMD, APPE
# and SITE.
#
# Default: False.
vsftpd_config_write_enable: false

# Enable file transfer logging to vsftpd_config_vsftpd_log_file?
#
# A log file will be maintained detailing uploads and downloads.
#
# Default: True.
vsftpd_config_xferlog_enable: true

# Transfer log (wu-ftpd format) file.
#
# Requires:
#   * vsftpd_config_dual_log_enable - log written to ths file.
#   * vsftpd_config_xferlog_enable=true and
#     vsftpd_config_xferlog_std_format=true - log written to this file.
#
# Default: '/var/log/vsftpd.log'.
vsftpd_config_xferlog_file: '/var/log/vsftpd.log'

# Enable writing file transfer log in standard format (wu-ftpd)?
#
# Transfer log file will be written to vsftpd_config_xferlog_file in standard
# xferlog format, as used by wu-ftpd. This is useful because you can reuse
# existing transfer statistics generators. The default format is more readable,
#
# Default: False.
vsftpd_config_xferlog_std_format: false

###############################################################################
# Debian Specific Patches
###############################################################################

# Indicate that VSFTPd runs on UTF8 filesystems. Default: False.
#
# 2025-03-03 - confirmed still patched for Debian bookworm.
#
# Reference:
# * https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=804777
vsftpd_config_debian_utf8_filesystem: false
